{"version":3,"sources":["types/player.ts","ctx/MusicPlayer/control.ts","sys/prerender/index.ts","ctx/MusicPlayer/MusicPlayerCtx.tsx","ctx/Menu/Ctx.tsx","ctx/WinSize/types.ts","ctx/WinSize/utils.ts","ctx/WinSize/Ctx.tsx","ctx/WinSize/CtxCmp.tsx","sys/defScrollSize/index.ts","ctx/WinSize/withCtx.tsx","ctx/WinSize/index.ts","ctx/PageMgr/types.ts","sys/bodyScroll/index.ts","ctx/PageMgr/PageMgrCtx.tsx","ctx/PageMgr/PageMgr.tsx","ctx/PageMgr/withCtxPageMgr.tsx","ctx/PageMgr/withUserInteraction.tsx","ctx/PageMgr/index.ts","ctx/Countdown/types.ts","ctx/Countdown/CountdownCtx.tsx","ctx/Countdown/CountdownCtxCmp.tsx","ctx/Countdown/utils.ts","ctx/Countdown/withCtxCountdown.tsx","ctx/Countdown/index.ts","ctx/MusicPlayer/index.ts","ctx/Menu/index.ts","ctx/MusicPlayer/MusicPlayerCtxCmp.tsx","ctx/MusicPlayer/withCtxMusicPlayer.tsx","ctx/Menu/Cmp.tsx","ctx/Menu/withCtx.tsx","App@next.tsx","AppApplyCtx.tsx","serviceWorker.ts","index.tsx"],"names":["Actions","Status","Volume","listenersPlay","listenersPause","control","play","forEach","it","pause","addEventListenerPlay","callback","push","addEventListenerPause","removeEventListenerPlay","filter","removeEventListenerPause","name","hasPreRendering","window","navigator","userAgent","musicPlayerCtx","status","PAUSE","change","isPlay","url","MusicPlayerCtx","React","createContext","Ctx","isOpen","open","close","WinSize","defWinSize","w","SM","XS","MD","LG","XL","canBeUsed","target","winSize","getSmaller","getCodeWinSize","WinSizeCtx","displayName","DELAY_RESIZE","WinSizeCtxCmp","props","state","innerWidth","scrollSize","resizeTimer","resizeLast","handleResize","Date","now","resizeCallback","resizeCheckAct","t","setState","addEventListener","elem","document","createElement","s","style","width","height","position","overflow","visibility","bottom","left","innerHTML","body","appendChild","x","offsetWidth","clientWidth","y","offsetHeight","clientHeight","removeChild","_e","defScrollSze","removeEventListener","this","clearTimeout","setTimeout","Provider","value","children","Component","withCtx","Consumer","Page","stack","bodyScroll","on","changeScroll","bind","off","getStatus","length","pop","requestAnimationFrame","changeBodyScroll","pageMgrValue","hasUserInteraction","topPage","UNKNOWN","PageMgrCtx","PageMgr","openPage","page","pageMgr","closePage","SINGLE","handlerOpen","handlerClose","withCtxPageMgr","PageMgrConsumer","withUserInteraction","CountdownLevel","countdown","getLevel","CORE","addTask","removeTask","CountdownCtx","CountdownCtxCmp","level","numCallback","callbacks","l","n","fn","runCallbacks","nextLevel","CRITICAL","IMPORTANT","MINOR","NOT_IMPORTANT","FINALLY","getNext","cssCls","classList","remove","withCtxCountdown","MusicPlayerCtxCmp","handlePlay","player","PLAY","handlePause","handleChange","handleIsPlay","withCtxMusicPlayer","musicPlayer","Cmp","MenuCtxCmp","menu","Route","Main","lazy","Music","MovieSeeMyVoice","regRouteMusic","RegExp","MUSIC","regRouteMovies","MOVIES","App","handlePopState","nextRoute","defineRoute","route","pushState","history","args","apply","dispatchEvent","Event","pathname","location","test","MAIN","Suspense","fallback","display","className","href","AppApplyCtx","Countdown","Menu","MusicPlayer","Boolean","hostname","match","rootElement","getElementById","Error","hasChildNodes","hydrate","render","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.274b590d.chunk.js","sourcesContent":["export enum Actions {\n  PLAY,\n  PAUSE,\n  NEXT,\n  PREV,\n  CHANGE,\n}\n\nexport enum Status {\n  PLAY,\n  PAUSE,\n}\n\nexport enum Volume {\n  UP,\n  DOWN,\n  MUTE,\n  UNMUTE,\n}\n\nexport interface Player {\n  status: Status;\n  play(): void;\n  pause(): void;\n  change(url: string | string[] | null): void;\n  isPlay: boolean;\n}\n\nexport interface MusicPlayer extends Player {\n  url: string | null;\n}\n","type Callback = () => void;\n\nlet listenersPlay: Callback[] = [];\nlet listenersPause: Callback[] = [];\n\nexport const control = {\n  play() {\n    listenersPlay.forEach(it => it());\n  },\n  pause() {\n    listenersPause.forEach(it => it());\n  },\n};\n\nexport function addEventListenerPlay(callback: Callback) {\n  listenersPlay.push(callback);\n}\n\nexport function addEventListenerPause(callback: Callback) {\n  listenersPause.push(callback);\n}\n\nexport function removeEventListenerPlay(callback: Callback) {\n  listenersPlay = listenersPlay.filter(it => it !== callback);\n}\n\nexport function removeEventListenerPause(callback: Callback) {\n  listenersPause.push(callback);\n}\n","const name = 'ReactSnap';\n\n/**\n * defines the pre-rendering process\n */\nexport function hasPreRendering() {\n  return window.navigator.userAgent === name;\n}\n","import React from 'react';\n\nimport { MusicPlayer, Status } from 'types/player';\n\nconst musicPlayerCtx: MusicPlayer = {\n  status: Status.PAUSE,\n  play: () => {},\n  pause: () => {},\n  change: () => {},\n  isPlay: false,\n  url: null,\n};\n\nconst MusicPlayerCtx = React.createContext<MusicPlayer>(musicPlayerCtx);\n\nexport default MusicPlayerCtx;\n","import React from 'react';\nimport { Menu } from './types';\n\nconst menu: Menu = {\n  isOpen: false,\n  open() {},\n  close() {},\n};\n\nconst Ctx = React.createContext<Menu>(menu);\n\nexport default Ctx;\n","export interface WinSizeProps {\n  winSize: WinSize;\n}\n\n// TODO new for windows - move here\nexport interface WinSizeNext {\n  scr: WinSize;\n  scroll: {\n    x: number;\n    y: number;\n  };\n}\n\n/**\n * Size of screens\n * minimal value for switching\n *\n * @example 0 >= XS < 567\n * @example 567 >= SM < 768\n */\nexport enum WinSize {\n  XS = 0, // 600 -- 300\n  SM = 600, // 960 -- 480\n  MD = 960, // 1280 -- 690\n  LG = 1280, // 1920 -- 960\n  XL = 1920, // 1920 -- 1920\n}\n","import { WinSize } from './types';\n\nexport function defWinSize(w: number): WinSize {\n  if (w < WinSize.SM) {\n    return WinSize.XS;\n  }\n  if (w < WinSize.MD) {\n    return WinSize.SM;\n  }\n  if (w < WinSize.LG) {\n    return WinSize.MD;\n  }\n  if (w < WinSize.XL) {\n    return WinSize.LG;\n  }\n\n  return WinSize.XL;\n}\n\nexport function canBeUsed(target: WinSize, winSize: WinSize): boolean {\n  return winSize <= target;\n}\n\n/**\n * relevant screen resolution\n */\nexport function howRelevant(target: WinSize, winSize: WinSize | null): number | null {\n  if (winSize === null) {\n    return null;\n  }\n\n  const d = target - winSize;\n  return d < 0 ? null : d + winSize;\n}\n\nexport function getSmaller(w: WinSize): WinSize | null {\n  if (w === WinSize.XL) {\n    return WinSize.LG;\n  }\n  if (w === WinSize.LG) {\n    return WinSize.MD;\n  }\n  if (w === WinSize.MD) {\n    return WinSize.SM;\n  }\n  if (w === WinSize.SM) {\n    return WinSize.XS;\n  }\n\n  return null;\n}\n\ntype Code = 'XS' | 'SM' | 'MD' | 'LG' | 'XL';\n\nexport function getCodeWinSize(w: WinSize): Code {\n  if (w === WinSize.XS) {\n    return 'XS';\n  }\n  if (w === WinSize.SM) {\n    return 'SM';\n  }\n  if (w === WinSize.MD) {\n    return 'MD';\n  }\n  if (w === WinSize.LG) {\n    return 'LG';\n  }\n\n  return 'XL';\n}\n","import React from 'react';\nimport { WinSize } from './types';\n\nconst WinSizeCtx = React.createContext<WinSize>(WinSize.XS);\n\nWinSizeCtx.displayName = 'WinSizeCtx';\n\nexport default WinSizeCtx;\n","import React from 'react';\n\nimport { defScrollSze } from 'sys/defScrollSize';\n\nimport { WinSize } from './types';\nimport { defWinSize } from './utils';\nimport WinSizeCtx from './Ctx';\n\ninterface Props {}\n\ninterface State {\n  winSize: WinSize;\n}\n\nconst DELAY_RESIZE = 100;\n\nclass WinSizeCtxCmp extends React.Component<Props, State> {\n  public state = {\n    winSize: defWinSize(window.innerWidth),\n  };\n\n  private readonly scrollSize: { x: number; y: number };\n  private resizeTimer: number | null = null;\n  private resizeLast: number = 0;\n\n  public constructor(props: Props) {\n    super(props);\n    window.addEventListener('resize', this.handleResize);\n\n    this.scrollSize = defScrollSze();\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.resizeTimer) {\n      clearTimeout(this.resizeTimer);\n    }\n  }\n\n  private handleResize = () => {\n    this.resizeLast = Date.now() + DELAY_RESIZE;\n\n    if (!this.resizeTimer) {\n      this.resizeCallback(DELAY_RESIZE);\n    }\n  };\n\n  private resizeCheckAct = () => {\n    const t = Date.now();\n    if (t < this.resizeLast) {\n      this.resizeCallback(t - this.resizeLast);\n      return;\n    }\n    this.resizeTimer = null;\n\n    const winSize = defWinSize(window.innerWidth);\n\n    if (this.state.winSize !== winSize) {\n      this.setState({\n        winSize,\n      });\n    }\n  };\n\n  private resizeCallback(t: number) {\n    this.resizeTimer = window.setTimeout(this.resizeCheckAct, t) as number;\n  }\n\n  public render() {\n    return (\n      <WinSizeCtx.Provider value={this.state.winSize}>{this.props.children}</WinSizeCtx.Provider>\n    );\n  }\n}\n\nexport default WinSizeCtxCmp;\n","/**\n * Define size of scroll\n */\nexport function defScrollSze(): { x: number; y: number } {\n  try {\n    const elem = document.createElement('div');\n    const s = elem.style;\n\n    s.width = '100px';\n    s.height = '100px';\n\n    s.position = 'fixed';\n    s.overflow = 'scroll';\n    s.visibility = 'hidden';\n    s.bottom = '-300px';\n    s.left = '0';\n\n    elem.innerHTML = `<div style=\"width:200px; height:200px;\"></div>`;\n    document.body.appendChild(elem);\n\n    const x = elem.offsetWidth - elem.clientWidth;\n    const y = elem.offsetHeight - elem.clientHeight;\n\n    document.body.removeChild(elem);\n\n    return {\n      x: x < 0 ? 0 : x,\n      y: y < 0 ? 0 : y,\n    };\n  } catch (_e) {\n    return {\n      x: 0,\n      y: 0,\n    };\n  }\n}\n","import React from 'react';\nimport WinSizeCtx from './Ctx';\n\nfunction withCtx<T>(Component: any) {\n  function WinSizeCtxCmp(props: T) {\n    return (\n      <WinSizeCtx.Consumer>\n        {winSize => <Component {...props} winSize={winSize} />}\n      </WinSizeCtx.Consumer>\n    );\n  }\n\n  WinSizeCtxCmp.displayName = `withWinSizeCtx(${Component.displayName ||\n    Component.name ||\n    'Undefined'})`;\n\n  return WinSizeCtxCmp;\n}\n\nexport default withCtx;\n","export { default as WinSizeCtxCmp } from './CtxCmp';\nexport { default as withCtxWinSize } from './withCtx';\nexport { default as WinSizeCtx } from './Ctx';\n\nexport * from './types';\nexport { howRelevant, canBeUsed, getSmaller, getCodeWinSize } from './utils';\n","export interface PageMgrProps {\n  pageMgr: PageMgrValue;\n}\n\nexport interface PageMgrUserInteractionProps {\n  hasUserInteraction: boolean;\n}\n\nexport interface PageMgrValue {\n  hasUserInteraction: boolean;\n  topPage: Page;\n}\n\nexport enum Page {\n  UNKNOWN = 'UNKNOWN',\n  SINGLE = 'SINGLE',\n  HAM_MENU = 'HAM_MENU',\n  BIO_MOB = 'BIO_MOB',\n  PHOTOS_VIEWER = 'PHOTOS_VIEWER',\n}\n\nexport type Handler = (isTop: boolean) => void;\n","import { BodyScroll } from './types';\n\nconst stack: boolean[] = [];\n\nexport const bodyScroll: Readonly<BodyScroll> = {\n  on: changeScroll.bind(this, true),\n\n  off: changeScroll.bind(this, false),\n\n  getStatus() {\n    return !stack.length;\n  },\n};\n\nfunction changeScroll(status: boolean): void {\n  if (status) {\n    stack.pop();\n  } else {\n    stack.push(true);\n  }\n  window.requestAnimationFrame(changeBodyScroll);\n}\n\nfunction changeBodyScroll(): void {\n  document.body.style.overflow = stack.length ? 'hidden' : null;\n}\n","import React from 'react';\nimport { PageMgrValue, Page } from './types';\n\nexport const pageMgrValue: PageMgrValue = {\n  hasUserInteraction: false,\n  topPage: Page.UNKNOWN,\n};\n\nconst PageMgrCtx = React.createContext<PageMgrValue>(pageMgrValue);\n\nexport default PageMgrCtx;\n","import React from 'react';\nimport { bodyScroll } from 'sys/bodyScroll';\nimport PageMgrCtx from './PageMgrCtx';\nimport { Page, PageMgrValue } from './types';\n\ninterface State {\n  pageMgr: PageMgrValue;\n}\n\n/**\n * @deprecated\n */\nclass PageMgr extends React.Component<{}, State> {\n  public static Page = Page;\n  private static handlerOpen: ((p: Page) => void) | null = null;\n  private static handlerClose: ((p: Page) => void) | null = null;\n\n  public static open(page: Page) {\n    PageMgr.handlerOpen && PageMgr.handlerOpen(page);\n  }\n  public static close(page: Page) {\n    PageMgr.handlerClose && PageMgr.handlerClose(page);\n  }\n\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      pageMgr: {\n        hasUserInteraction: false,\n        topPage: Page.SINGLE,\n      },\n    };\n\n    PageMgr.handlerOpen = this.openPage;\n    PageMgr.handlerClose = this.closePage;\n  }\n\n  private openPage = (page: Page): void => {\n    const { pageMgr } = this.state;\n\n    this.setState({\n      pageMgr: {\n        ...pageMgr,\n        topPage: page,\n      },\n    });\n\n    bodyScroll.off();\n  };\n\n  private closePage = (): void => {\n    const { pageMgr } = this.state;\n\n    bodyScroll.on();\n\n    this.setState({\n      pageMgr: {\n        ...pageMgr,\n        topPage: Page.SINGLE,\n      },\n    });\n  };\n\n  public render() {\n    return (\n      <PageMgrCtx.Provider value={this.state.pageMgr}>{this.props.children}</PageMgrCtx.Provider>\n    );\n  }\n}\n\nexport default PageMgr;\n","import React from 'react';\nimport PageMgrCtx from './PageMgrCtx';\nimport { Page } from './types';\n\nexport function withCtxPageMgr<T>(page: Page, Component: any) {\n  function PageMgrConsumer(props: T) {\n    return (\n      <PageMgrCtx.Consumer>\n        {pageMgr => {\n          const pageMgrValue = { ...pageMgr, hasUserInteraction: page === pageMgr.topPage };\n          return (\n            <PageMgrCtx.Provider value={pageMgrValue}>\n              <Component {...props} pageMgr={pageMgrValue} />\n            </PageMgrCtx.Provider>\n          );\n        }}\n      </PageMgrCtx.Consumer>\n    );\n  }\n\n  PageMgrConsumer.displayName = `withCtxPageMgr(${Component.displayName ||\n    Component.name ||\n    'Undefined'})`;\n\n  return PageMgrConsumer;\n}\n","import React from 'react';\nimport PageMgrCtx from './PageMgrCtx';\n\nexport function withUserInteraction<T>(Component: any) {\n  function PageMgrConsumer(props: T) {\n    return (\n      <PageMgrCtx.Consumer>\n        {pageMgrValue => (\n          <Component {...props} hasUserInteraction={pageMgrValue.hasUserInteraction} />\n        )}\n      </PageMgrCtx.Consumer>\n    );\n  }\n\n  PageMgrConsumer.displayName = `withCtxPageMgr(${Component.displayName ||\n    Component.name ||\n    'Undefined'})`;\n\n  return PageMgrConsumer;\n}\n","import { Page, PageMgrProps, PageMgrUserInteractionProps } from './types';\n\nexport { Page };\n\nexport interface PageMgrProps extends PageMgrProps {}\nexport type PageMgrUserInteractionProps = PageMgrUserInteractionProps;\n\nexport { default as PageMgr } from './PageMgr';\nexport { withCtxPageMgr } from './withCtxPageMgr';\nexport { withUserInteraction } from './withUserInteraction';\n","export interface CountdownProps {\n  countdown: Countdown;\n}\n\nexport interface Countdown {\n  /**\n   * get current level of countdown\n   */\n  getLevel(): CountdownLevel;\n\n  /**\n   * add task at level\n   * return value of promise don't matter\n   */\n  addTask(countdownLevel: CountdownLevel, callback: (currentLevel: CountdownLevel) => void): number;\n\n  /**\n   * remove task, if component or anything did unmount\n   */\n  removeTask(numTask: number): void;\n}\n\nexport enum CountdownLevel {\n  CORE,\n  CRITICAL,\n  IMPORTANT,\n  MINOR,\n  NOT_IMPORTANT,\n  FINALLY,\n}\n","import React from 'react';\nimport { Countdown, CountdownLevel } from './types';\n\nconst countdown = {\n  getLevel() {\n    return CountdownLevel.CORE;\n  },\n  addTask() {\n    return 0;\n  },\n  removeTask(): void {},\n};\n\nconst CountdownCtx = React.createContext<Countdown>(countdown);\n\nexport default CountdownCtx;\n","import React from 'react';\n\nimport { hasPreRendering } from 'sys/prerender';\n\nimport CountdownCtx from './CountdownCtx';\nimport { CountdownLevel, Countdown } from './types';\nimport { getNext } from './utils';\n\nclass CountdownCtxCmp extends React.Component<{}> {\n  /**\n   * for manipulating with <body class=\"... hide-elem-before-critical\">\n   * when the level, the class is removed\n   */\n  private static cssCls = {\n    [CountdownLevel.CRITICAL]: 'hide-elem-before-critical',\n    // not yet used\n    // [CountdownLevel.IMPORTANT]: 'hide-elem-before-important',\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  private readonly countdown: Countdown;\n\n  /**\n   * Get current level of countdown\n   */\n  private level: CountdownLevel = CountdownLevel.CORE;\n\n  private numCallback: number = 0;\n\n  private callbacks: {\n    l: CountdownLevel;\n    n: number;\n    fn: (currentLevel: CountdownLevel) => void;\n  }[] = [];\n\n  public constructor(props: {}) {\n    super(props);\n\n    this.countdown = {\n      getLevel: this.getLevel,\n\n      // for not user browser, example server side or pre-rendering - not execute callbacks\n      addTask: !hasPreRendering() ? this.addTask : () => 0,\n      removeTask: this.removeTask,\n    };\n\n    setTimeout(this.nextLevel, 500); // for critical\n    setTimeout(this.nextLevel, 1000);\n    setTimeout(this.nextLevel, 2000);\n    setTimeout(this.nextLevel, 4000);\n    setTimeout(this.nextLevel, 6000);\n  }\n  private getLevel: Countdown['getLevel'] = () => this.level;\n\n  private addTask: Countdown['addTask'] = (level, callback): number => {\n    if (level <= this.level) {\n      setTimeout(() => {\n        callback(this.level);\n      }, 1);\n      return 0;\n    }\n\n    this.callbacks.push({\n      l: level,\n      n: this.numCallback++,\n      fn: callback,\n    });\n\n    return this.numCallback;\n  };\n\n  private removeTask: Countdown['removeTask'] = (numCallback: number): void => {\n    this.callbacks = this.callbacks.filter(it => it.n !== numCallback);\n  };\n\n  private runCallbacks = () => {\n    this.callbacks = this.callbacks.filter(it => {\n      if (it.l > this.level) {\n        return true;\n      }\n\n      it.fn(this.level);\n      return false;\n    });\n  };\n\n  private nextLevel = () => {\n    const nextLevel = getNext(this.level);\n\n    if (!nextLevel) {\n      return;\n    }\n\n    this.level = nextLevel;\n\n    window.requestAnimationFrame(this.runCallbacks);\n\n    // @ts-ignore\n    const cssCls = CountdownCtxCmp.cssCls[nextLevel];\n    if (cssCls) {\n      document.body.classList.remove(cssCls);\n    }\n  };\n\n  public render() {\n    return (\n      <CountdownCtx.Provider value={this.countdown}>{this.props.children}</CountdownCtx.Provider>\n    );\n  }\n}\n\nexport default CountdownCtxCmp;\n","import { CountdownLevel } from './types';\n\n/**\n * relevant level\n */\nexport function howRelevant(\n  target: CountdownLevel,\n  countdownLevel: CountdownLevel | null\n): number | null {\n  if (countdownLevel === null) {\n    return null;\n  }\n\n  const d = target - countdownLevel;\n  return d < 0 ? null : d;\n}\n\nexport function getNext(level: CountdownLevel): CountdownLevel | null {\n  switch (level) {\n    case CountdownLevel.CORE:\n      return CountdownLevel.CRITICAL;\n    case CountdownLevel.CRITICAL:\n      return CountdownLevel.IMPORTANT;\n    case CountdownLevel.IMPORTANT:\n      return CountdownLevel.MINOR;\n    case CountdownLevel.MINOR:\n      return CountdownLevel.NOT_IMPORTANT;\n    case CountdownLevel.NOT_IMPORTANT:\n      return CountdownLevel.FINALLY;\n\n    default:\n      return null;\n  }\n}\n","import React from 'react';\nimport CountdownCtx from './CountdownCtx';\n\nfunction withCtxCountdown<T>(Component: any) {\n  function CountdownCtxCmp(props: T) {\n    return (\n      <CountdownCtx.Consumer>\n        {countdown => <Component {...props} countdown={countdown} />}\n      </CountdownCtx.Consumer>\n    );\n  }\n\n  CountdownCtxCmp.displayName = `withCtxCountdown(${Component.displayName ||\n    Component.name ||\n    'Undefined'})`;\n\n  return CountdownCtxCmp;\n}\n\nexport default withCtxCountdown;\n","export { default as CountdownCtxCmp } from './CountdownCtxCmp';\nexport { default as withCtxCountdown } from './withCtxCountdown';\n\nexport * from './types';\nexport { howRelevant } from './utils';\n","export { default as MusicPlayerCtxCmp } from './MusicPlayerCtxCmp';\nexport { default as withCtxMusicPlayer } from './withCtxMusicPlayer';\n\nexport * from './types';\nexport { control as musicPlayerControl } from './control';\n","export { default as MenuCtxCmp } from './Cmp';\nexport { default as withCtxMenu } from './withCtx';\n\nexport * from './types';\n","import { MusicPlayer, Status } from 'types/player';\nimport React from 'react';\nimport MusicPlayerCtx from './MusicPlayerCtx';\nimport {\n  addEventListenerPause,\n  addEventListenerPlay,\n  removeEventListenerPause,\n  removeEventListenerPlay,\n} from './control';\n\ninterface Props {}\n\ninterface State {\n  player: MusicPlayer;\n}\n\nclass MusicPlayerCtxCmp extends React.Component<Props, State> {\n  public constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      player: {\n        status: Status.PAUSE,\n        play: this.handlePlay,\n        pause: this.handlePause,\n        change: this.handleChange,\n        url: null,\n        isPlay: false,\n      },\n    };\n\n    addEventListenerPlay(this.handlePlay);\n    addEventListenerPause(this.handlePause);\n  }\n\n  public componentWillUnmount(): void {\n    removeEventListenerPlay(this.handlePlay);\n    removeEventListenerPause(this.handlePause);\n  }\n\n  private handlePlay = () => {\n    const { player } = this.state;\n\n    this.setState({\n      player: {\n        ...player,\n        status: Status.PLAY,\n        isPlay: true,\n      },\n    });\n  };\n\n  private handlePause = () => {\n    const { player } = this.state;\n\n    this.setState({\n      player: {\n        ...player,\n        status: Status.PAUSE,\n        isPlay: false,\n      },\n    });\n  };\n\n  private handleChange = (url: string | null) => {\n    const { player } = this.state;\n\n    this.setState({\n      player: {\n        ...player,\n        url,\n        status: url ? Status.PLAY : Status.PAUSE,\n        isPlay: !!url,\n      },\n    });\n  };\n\n  private handleIsPlay = () => this.state.player.status === Status.PLAY;\n\n  public render() {\n    const { player } = this.state;\n\n    return <MusicPlayerCtx.Provider value={player}>{this.props.children}</MusicPlayerCtx.Provider>;\n  }\n}\n\nexport default MusicPlayerCtxCmp;\n","import React from 'react';\nimport MusicPlayerCtx from './MusicPlayerCtx';\n\nfunction withCtxMusicPlayer<T>(Component: any) {\n  function MusicPlayerCtxCmp(props: T) {\n    return (\n      <MusicPlayerCtx.Consumer>\n        {musicPlayer => <Component {...props} musicPlayer={musicPlayer} />}\n      </MusicPlayerCtx.Consumer>\n    );\n  }\n\n  MusicPlayerCtxCmp.displayName = `withMusicPlayerCtx(${Component.displayName ||\n    Component.name ||\n    'Undefined'})`;\n\n  return MusicPlayerCtxCmp;\n}\n\nexport default withCtxMusicPlayer;\n","import React from 'react';\n\nimport Ctx from './Ctx';\nimport { Menu } from './types';\n\ntype State = Menu;\n\nclass Cmp extends React.Component<{}, State> {\n  public static displayName = 'MenuCtxCmp';\n\n  public constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isOpen: false,\n      // eslint-disable-next-line react/no-unused-state\n      open: this.open,\n      // eslint-disable-next-line react/no-unused-state\n      close: this.close,\n    };\n  }\n\n  private open = () => {\n    if (!this.state.isOpen) {\n      this.setState({\n        isOpen: true,\n      });\n    }\n  };\n\n  private close = () => {\n    if (this.state.isOpen) {\n      this.setState({\n        isOpen: false,\n      });\n    }\n  };\n\n  public render() {\n    return <Ctx.Provider value={this.state}>{this.props.children}</Ctx.Provider>;\n  }\n}\n\nexport default Cmp;\n","import React from 'react';\nimport Ctx from './Ctx';\n\nfunction withCtx<T>(Component: any) {\n  const MenuCtxCmp = (props: T) => {\n    return <Ctx.Consumer>{menu => <Component {...props} menu={menu} />}</Ctx.Consumer>;\n  };\n\n  MenuCtxCmp.displayName = `withCtxMenu(${Component.displayName || Component.name || 'Undefined'})`;\n\n  return MenuCtxCmp;\n}\n\nexport default withCtx;\n","import React from 'react';\n\nimport { hasPreRendering } from 'sys/prerender';\n\nimport 'styles/vars.css';\nimport 'styles/global.css';\n\nconst Main = React.lazy(() => import('sites/Main'));\nconst Music = React.lazy(() => import('sites/Music'));\nconst MovieSeeMyVoice = React.lazy(() => import('sites/movies/SeeMyVoice'));\n\nenum Route {\n  MAIN = '',\n  MUSIC = 'music',\n  MOVIES = 'see-my-voice',\n}\n\ninterface State {\n  route: Route;\n}\n\nconst regRouteMusic = new RegExp(`^/${Route.MUSIC}(/.*)?$`, 'i');\nconst regRouteMovies = new RegExp(`^/${Route.MOVIES}(/.*)?$`, 'i');\n\nclass App extends React.Component<{}, State> {\n  private static defineRoute(): Route {\n    const { pathname } = window.location;\n\n    switch (true) {\n      case regRouteMusic.test(pathname):\n        return Route.MUSIC;\n      case regRouteMovies.test(pathname):\n        return Route.MOVIES;\n      default:\n        return Route.MAIN;\n    }\n  }\n\n  public constructor(props: {}) {\n    super(props);\n    // no unsubscribe, the application is constantly running\n    window.addEventListener('popstate', this.handlePopState);\n\n    const { pushState } = window.history;\n    window.history.pushState = (...args) => {\n      pushState.apply(window.history, args);\n      window.dispatchEvent(new Event('popstate'));\n    };\n\n    this.state = {\n      route: App.defineRoute(),\n    };\n  }\n\n  private handlePopState = () => {\n    const nextRoute = App.defineRoute();\n\n    if (this.state.route === nextRoute) {\n      return;\n    }\n\n    this.setState({\n      route: nextRoute,\n    });\n  };\n\n  public render() {\n    let Cmp;\n\n    switch (this.state.route) {\n      case Route.MUSIC:\n        Cmp = <Music />;\n        break;\n      case Route.MOVIES:\n        Cmp = <MovieSeeMyVoice />;\n        break;\n\n      default:\n        Cmp = <Main />;\n    }\n\n    return (\n      <>\n        <React.Suspense fallback={null}>{Cmp}</React.Suspense>\n\n        {hasPreRendering() && (\n          <span style={{ display: 'none' }} className=\"\">\n            {/* eslint-disable-next-line jsx-a11y/anchor-has-content */}\n            <a href=\"/music\" />\n            {/* eslint-disable-next-line jsx-a11y/anchor-has-content */}\n            <a href=\"/see-my-voice\" />\n          </span>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nimport { WinSizeCtxCmp } from 'ctx/WinSize';\nimport { MusicPlayerCtxCmp } from 'ctx/MusicPlayer';\nimport { CountdownCtxCmp } from 'ctx/Countdown';\nimport { PageMgr } from 'ctx/PageMgr';\nimport { MenuCtxCmp } from 'ctx/Menu';\n\nimport AppNext from './App@next';\n\nconst AppApplyCtx = () => (\n  <WinSizeCtxCmp>\n    <CountdownCtxCmp>\n      <MenuCtxCmp>\n        <MusicPlayerCtxCmp>\n          <PageMgr>\n            <AppNext />\n          </PageMgr>\n        </MusicPlayerCtxCmp>\n      </MenuCtxCmp>\n    </CountdownCtxCmp>\n  </WinSizeCtxCmp>\n);\n\nexport default AppApplyCtx;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { hydrate, render } from 'react-dom';\nimport AppApplyCtx from './AppApplyCtx';\nimport * as serviceWorker from './serviceWorker';\n\nconst rootElement: HTMLElement | null = document.getElementById('root');\n\nif (!rootElement) {\n  throw new Error('Not found dom element `id:root`');\n}\n\nif (rootElement.hasChildNodes()) {\n  hydrate(<AppApplyCtx />, rootElement);\n} else {\n  render(<AppApplyCtx />, rootElement);\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}